<!--
  Example WLP config for FCMWeb to do only TLS1.2

  In addition to applying the settings below, also make sure to add the trust
  chain into your JRE:s cacerts.
-->
<server description="fcm.web">
  <featureManager>
    <feature>ssl-1.0</feature>
  </featureManager>

  <httpEndpoint host="*" httpPort="3000" httpsPort="3443" id="defaultHttpEndpoint">
    <httpOptions removeServerHeader="true" />
    <sslOptions sslRef="tlsSettings" />
  </httpEndpoint>

  <webContainer deferServletLoad="false" com.ibm.ws.webcontainer.addStrictTransportSecurityHeader="max-age=31536000;includeSubDomains" />

  <!-- This is actually an idea on how to get stric-security-transport on / -->
  <webApplication contextRoot="/" id="rootApp2" location="rootApp2.war" name="rootApp2"/>

  <ssl id="tlsSettings" keyStoreRef="defaultKeyStore" sslProtocol="TLSv1.2" serverKeyAlias="default" />
  <!-- Ciphers below can be added/removed as needed, fx: -->
  <!-- enabledCiphers="SSL_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 SSL_ECDHE_RSA_WITH_AES_256_GCM_SHA384 SSL_RSA_WITH_AES_256_GCM_SHA384 SSL_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 SSL_ECDHE_RSA_WITH_AES_128_GCM_SHA256 SSL_RSA_WITH_AES_128_GCM_SHA256 SSL_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 SSL_ECDHE_RSA_WITH_AES_256_CBC_SHA384 SSL_RSA_WITH_AES_256_CBC_SHA256 SSL_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 SSL_ECDHE_RSA_WITH_AES_128_CBC_SHA256 SSL_RSA_WITH_AES_128_CBC_SHA256" -->

  <keyStore id="defaultKeyStore" location="" type="PKCS12" password="" />
</server>
